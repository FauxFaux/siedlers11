#pragma once

#include <stdio.h>

typedef unsigned int uint;

#if defined(D3D10_OVERRIDE)
#include <d3d10.h>
#include <d3dx10.h>

typedef ID3D10BlendState ID3DBlendState;
typedef ID3D10Buffer ID3DBuffer;
typedef ID3D10DepthStencilState ID3DDepthStencilState;
typedef ID3D10DepthStencilView ID3DDepthStencilView;
typedef ID3D10Device ID3DDevice;
typedef ID3D10Device ID3DDeviceContext;
typedef ID3D10GeometryShader ID3DGeometryShader;
typedef ID3D10InputLayout ID3DInputLayout;
typedef ID3D10PixelShader ID3DPixelShader;
typedef ID3D10RasterizerState ID3DRasterizerState;
typedef ID3D10RenderTargetView ID3DRenderTargetView;
typedef ID3D10Resource ID3DResource;
typedef ID3D10SamplerState ID3DSamplerState;
typedef ID3D10ShaderResourceView ID3DShaderResourceView;
typedef ID3D10Texture2D ID3DTexture2D;
typedef ID3D10VertexShader ID3DVertexShader;

typedef D3D10_BLEND_DESC D3D_BLEND_DESC;
typedef D3D10_BUFFER_DESC D3D_BUFFER_DESC;
typedef D3D10_DEPTH_STENCIL_DESC D3D_DEPTH_STENCIL_DESC;
typedef D3D10_DEPTH_STENCIL_VIEW_DESC D3D_DEPTH_STENCIL_VIEW_DESC;
typedef D3D10_INPUT_ELEMENT_DESC D3D_INPUT_ELEMENT_DESC;
typedef D3D10_RASTERIZER_DESC D3D_RASTERIZER_DESC;
typedef D3D10_SAMPLER_DESC D3D_SAMPLER_DESC;
typedef D3D10_SHADER_RESOURCE_VIEW_DESC D3D_SHADER_RESOURCE_VIEW_DESC;
typedef D3D10_SUBRESOURCE_DATA D3D_SUBRESOURCE_DATA;
typedef D3D10_TEXTURE2D_DESC D3D_TEXTURE2D_DESC;
typedef D3D10_VIEWPORT D3D_VIEWPORT;

// D3D10_BIND_FLAG
#define D3D_BIND_VERTEX_BUFFER D3D10_BIND_VERTEX_BUFFER
#define D3D_BIND_INDEX_BUFFER D3D10_BIND_INDEX_BUFFER
#define D3D_BIND_CONSTANT_BUFFER D3D10_BIND_CONSTANT_BUFFER
#define D3D_BIND_SHADER_RESOURCE D3D10_BIND_SHADER_RESOURCE
#define D3D_BIND_STREAM_OUTPUT D3D10_BIND_STREAM_OUTPUT
#define D3D_BIND_RENDER_TARGET D3D10_BIND_RENDER_TARGET
#define D3D_BIND_DEPTH_STENCIL D3D10_BIND_DEPTH_STENCIL

// D3D10_CLEAR_FLAG
#define D3D_CLEAR_DEPTH D3D10_CLEAR_DEPTH
#define D3D_CLEAR_STENCIL D3D10_CLEAR_STENCIL

// D3D10_COMPARISON_FUNC
#define D3D_COMPARISON_NEVER D3D10_COMPARISON_NEVER
#define D3D_COMPARISON_LESS D3D10_COMPARISON_LESS
#define D3D_COMPARISON_EQUAL D3D10_COMPARISON_EQUAL
#define D3D_COMPARISON_LESS_EQUAL D3D10_COMPARISON_LESS_EQUAL
#define D3D_COMPARISON_GREATER D3D10_COMPARISON_GREATER
#define D3D_COMPARISON_NOT_EQUAL D3D10_COMPARISON_NOT_EQUAL
#define D3D_COMPARISON_GREATER_EQUAL D3D10_COMPARISON_GREATER_EQUAL
#define D3D_COMPARISON_ALWAYS D3D10_COMPARISON_ALWAYS

// D3D10_CPU_ACCESS_FLAG
#define D3D_CPU_ACCESS_WRITE D3D10_CPU_ACCESS_WRITE
#define D3D_CPU_ACCESS_READ D3D10_CPU_ACCESS_READ

// D3D10_CULL_MODE
#define D3D_CULL_NONE D3D10_CULL_NONE
#define D3D_CULL_FRONT D3D10_CULL_FRONT
#define D3D_CULL_BACK D3D10_CULL_BACK

// D3D10_DEPTH_WRITE_MASK
#define D3D_DEPTH_WRITE_MASK_ZERO D3D10_DEPTH_WRITE_MASK_ZERO
#define D3D_DEPTH_WRITE_MASK_ALL D3D10_DEPTH_WRITE_MASK_ALL

// D3D11_DSV_DIMENSION
#define D3D_DSV_DIMENSION_UNKNOWN D3D10_DSV_DIMENSION_UNKNOWN
#define D3D_DSV_DIMENSION_TEXTURE1D D3D10_DSV_DIMENSION_TEXTURE1D
#define D3D_DSV_DIMENSION_TEXTURE1DARRAY D3D10_DSV_DIMENSION_TEXTURE1DARRAY
#define D3D_DSV_DIMENSION_TEXTURE2D D3D10_DSV_DIMENSION_TEXTURE2D
#define D3D_DSV_DIMENSION_TEXTURE2DARRAY D3D10_DSV_DIMENSION_TEXTURE2DARRAY
#define D3D_DSV_DIMENSION_TEXTURE2DMS D3D10_DSV_DIMENSION_TEXTURE2DMS
#define D3D_DSV_DIMENSION_TEXTURE2DMSARRAY D3D10_DSV_DIMENSION_TEXTURE2DMSARRAY

// D3D10_FILL_MODE
#define D3D_FILL_WIREFRAME D3D10_FILL_WIREFRAME
#define D3D_FILL_SOLID D3D10_FILL_SOLID

// D3D10_FILTER
#define D3D_FILTER_MIN_MAG_MIP_POINT D3D10_FILTER_MIN_MAG_MIP_POINT
#define D3D_FILTER_MIN_MAG_POINT_MIP_LINEAR D3D10_FILTER_MIN_MAG_POINT_MIP_LINEAR
#define D3D_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT D3D10_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT
#define D3D_FILTER_MIN_POINT_MAG_MIP_LINEAR D3D10_FILTER_MIN_POINT_MAG_MIP_LINEAR
#define D3D_FILTER_MIN_LINEAR_MAG_MIP_POINT D3D10_FILTER_MIN_LINEAR_MAG_MIP_POINT
#define D3D_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR D3D10_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR
#define D3D_FILTER_MIN_MAG_LINEAR_MIP_POINT D3D10_FILTER_MIN_MAG_LINEAR_MIP_POINT
#define D3D_FILTER_MIN_MAG_MIP_LINEAR D3D10_FILTER_MIN_MAG_MIP_LINEAR
#define D3D_FILTER_ANISOTROPIC D3D10_FILTER_ANISOTROPIC
#define D3D_FILTER_COMPARISON_MIN_MAG_MIP_POINT D3D10_FILTER_COMPARISON_MIN_MAG_MIP_POINT
#define D3D_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR D3D10_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR
#define D3D_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT D3D10_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT
#define D3D_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR D3D10_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR
#define D3D_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT D3D10_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT
#define D3D_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR D3D10_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR
#define D3D_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT D3D10_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT
#define D3D_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR D3D10_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR
#define D3D_FILTER_COMPARISON_ANISOTROPIC D3D10_FILTER_COMPARISON_ANISOTROPIC
#define D3D_FILTER_TEXT_1_BIT D3D10_FILTER_TEXT_1BIT

// D3D10_INPUT_CLASSIFICATION
#define D3D_INPUT_PER_VERTEX_DATA D3D10_INPUT_PER_VERTEX_DATA
#define D3D_INPUT_PER_INSTANCE_DATA D3D10_INPUT_PER_INSTANCE_DATA

// D3D10_MAP
#define D3D_MAP_READ D3D10_MAP_READ
#define D3D_MAP_WRITE D3D10_MAP_WRITE
#define D3D_MAP_READ_WRITE D3D10_MAP_READ_WRITE
#define D3D_MAP_WRITE_DISCARD D3D10_MAP_WRITE_DISCARD
#define D3D_MAP_WRITE_NO_OVERWRITE D3D10_MAP_WRITE_NO_OVERWRITE

// D3D10_PRIMITIVE_TOPOLOGY
#define D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST D3D10_PRIMITIVE_TOPOLOGY_TRIANGLELIST

// D3D10_SRV_DIMENSION
#define D3D_SRV_DIMENSION_UNKNOWN D3D10_SRV_DIMENSION_UNKNOWN
#define D3D_SRV_DIMENSION_BUFFER D3D10_SRV_DIMENSION_BUFFER
#define D3D_SRV_DIMENSION_TEXTURE1D D3D10_SRV_DIMENSION_TEXTURE1D
#define D3D_SRV_DIMENSION_TEXTURE1DARRAY D3D10_SRV_DIMENSION_TEXTURE1DARRAY
#define D3D_SRV_DIMENSION_TEXTURE2D D3D10_SRV_DIMENSION_TEXTURE2D
#define D3D_SRV_DIMENSION_TEXTURE2DARRAY D3D10_SRV_DIMENSION_TEXTURE2DARRAY
#define D3D_SRV_DIMENSION_TEXTURE2DMS D3D10_SRV_DIMENSION_TEXTURE2DMS
#define D3D_SRV_DIMENSION_TEXTURE2DMSARRAY D3D10_SRV_DIMENSION_TEXTURE2DMSARRAY
#define D3D_SRV_DIMENSION_TEXTURE3D D3D10_SRV_DIMENSION_TEXTURE3D
#define D3D_SRV_DIMENSION_TEXTURECUBE D3D10_SRV_DIMENSION_TEXTURECUBE
#define D3D_SRV_DIMENSION_TEXTURECUBEARRAY D3D10_SRV_DIMENSION_TEXTURECUBEARRAY
#define D3D_SRV_DIMENSION_BUFFEREX D3D10_SRV_DIMENSION_BUFFEREX

// D3D10_TEXTURE_ADDRESS_MODE
#define D3D_TEXTURE_ADDRESS_WRAP D3D10_TEXTURE_ADDRESS_WRAP
#define D3D_TEXTURE_ADDRESS_MIRROR D3D10_TEXTURE_ADDRESS_MIRROR
#define D3D_TEXTURE_ADDRESS_CLAMP D3D10_TEXTURE_ADDRESS_CLAMP
#define D3D_TEXTURE_ADDRESS_BORDER D3D10_TEXTURE_ADDRESS_BORDER
#define D3D_TEXTURE_ADDRESS_MIRROR_ONCE D3D10_TEXTURE_ADDRESS_MIRROR_ONCE

// D3D10_USAGE
#define D3D_USAGE_DEFAULT D3D10_USAGE_DEFAULT
#define D3D_USAGE_IMMUTABLE D3D10_USAGE_IMMUTABLE
#define D3D_USAGE_DYNAMIC D3D10_USAGE_DYNAMIC
#define D3D_USAGE_STAGING D3D10_USAGE_STAGING

#define CREATE_VERTEX_SHADER_ARGS(pShaderByteCode, byteCodeLength, pClassLinkage, ppVertexShader) pShaderByteCode, byteCodeLength, ppVertexShader
#define CREATE_PIXEL_SHADER_ARGS(pShaderByteCode, byteCodeLength, pClassLinkage, ppPixelShader) pShaderByteCode, byteCodeLength, ppPixelShader
#define CREATE_GEOMETRY_SHADER_ARGS(pShaderByteCode, byteCodeLength, pClassLinkage, ppGeometryShader) pShaderByteCode, byteCodeLength, ppGeometryShader

#define VS_SET_SHADER_ARGS(pVertexShader, ppClassInstances, numClassInstances) pVertexShader
#define PS_SET_SHADER_ARGS(pPixelShader, ppClassInstances, numClassInstances) pPixelShader
#define GS_SET_SHADER_ARGS(pGeometryShader, ppClassInstances, numClassInstances) pGeometryShader

#define CREATE_D3D_BUFFER_DESC(byteWidth, usage, bindFlags, cpuAccessFlags, miscFlags, structureByteStride) { byteWidth, usage, bindFlags, cpuAccessFlags, miscFlags }

#define D3DXCompileFromMemory D3DX10CompileFromMemory
#define D3DXCreateTextureFromFile D3DX10CreateTextureFromFile
#define D3D_CREATE_DEVICE_DEBUG D3D10_CREATE_DEVICE_DEBUG

#define D3DCalcSubresource D3D10CalcSubresource

#else

#include <d3d11.h>
#include <D3DX11.h>

typedef ID3D11Buffer ID3DBuffer;
typedef ID3D11DepthStencilState ID3DDepthStencilState;
typedef ID3D11DepthStencilView ID3DDepthStencilView;
typedef ID3D11Device ID3DDevice;
typedef ID3D11DeviceContext ID3DDeviceContext;
typedef ID3D11GeometryShader ID3DGeometryShader;
typedef ID3D11InputLayout ID3DInputLayout;
typedef ID3D11PixelShader ID3DPixelShader;
typedef ID3D11RasterizerState ID3DRasterizerState;
typedef ID3D11RenderTargetView ID3DRenderTargetView;
typedef ID3D11Resource ID3DResource;
typedef ID3D11SamplerState ID3DSamplerState;
typedef ID3D11ShaderResourceView ID3DShaderResourceView;
typedef ID3D11Texture2D ID3DTexture2D;
typedef ID3D11VertexShader ID3DVertexShader;

typedef D3D11_BUFFER_DESC D3D_BUFFER_DESC;
typedef D3D11_DEPTH_STENCIL_DESC D3D_DEPTH_STENCIL_DESC;
typedef D3D11_DEPTH_STENCIL_VIEW_DESC D3D_DEPTH_STENCIL_VIEW_DESC;
typedef D3D11_INPUT_ELEMENT_DESC D3D_INPUT_ELEMENT_DESC;
typedef D3D11_RASTERIZER_DESC D3D_RASTERIZER_DESC;
typedef D3D11_SAMPLER_DESC D3D_SAMPLER_DESC;
typedef D3D11_SHADER_RESOURCE_VIEW_DESC D3D_SHADER_RESOURCE_VIEW_DESC;
typedef D3D11_SUBRESOURCE_DATA D3D_SUBRESOURCE_DATA;
typedef D3D11_TEXTURE2D_DESC D3D_TEXTURE2D_DESC;
typedef D3D11_VIEWPORT D3D_VIEWPORT;

// D3D11_BIND_FLAG
#define D3D_BIND_VERTEX_BUFFER D3D11_BIND_VERTEX_BUFFER
#define D3D_BIND_INDEX_BUFFER D3D11_BIND_INDEX_BUFFER
#define D3D_BIND_CONSTANT_BUFFER D3D11_BIND_CONSTANT_BUFFER
#define D3D_BIND_SHADER_RESOURCE D3D11_BIND_SHADER_RESOURCE
#define D3D_BIND_STREAM_OUTPUT D3D11_BIND_STREAM_OUTPUT
#define D3D_BIND_RENDER_TARGET D3D11_BIND_RENDER_TARGET
#define D3D_BIND_DEPTH_STENCIL D3D11_BIND_DEPTH_STENCIL

// D3D11_CLEAR_FLAG
#define D3D_CLEAR_DEPTH D3D11_CLEAR_DEPTH
#define D3D_CLEAR_STENCIL D3D11_CLEAR_STENCIL

// D3D11_COMPARISON_FUNC
#define D3D_COMPARISON_NEVER D3D11_COMPARISON_NEVER
#define D3D_COMPARISON_LESS D3D11_COMPARISON_LESS
#define D3D_COMPARISON_EQUAL D3D11_COMPARISON_EQUAL
#define D3D_COMPARISON_LESS_EQUAL D3D11_COMPARISON_LESS_EQUAL
#define D3D_COMPARISON_GREATER D3D11_COMPARISON_GREATER
#define D3D_COMPARISON_NOT_EQUAL D3D11_COMPARISON_NOT_EQUAL
#define D3D_COMPARISON_GREATER_EQUAL D3D11_COMPARISON_GREATER_EQUAL
#define D3D_COMPARISON_ALWAYS D3D11_COMPARISON_ALWAYS

// D3D11_CPU_ACCESS_FLAG
#define D3D_CPU_ACCESS_WRITE D3D11_CPU_ACCESS_WRITE
#define D3D_CPU_ACCESS_READ D3D11_CPU_ACCESS_READ

// D3D11_CULL_MODE
#define D3D_CULL_NONE D3D11_CULL_NONE
#define D3D_CULL_FRONT D3D11_CULL_FRONT
#define D3D_CULL_BACK D3D11_CULL_BACK

// D3D11_DEPTH_WRITE_MASK
#define D3D_DEPTH_WRITE_MASK_ZERO D3D11_DEPTH_WRITE_MASK_ZERO
#define D3D_DEPTH_WRITE_MASK_ALL D3D11_DEPTH_WRITE_MASK_ALL

// D3D11_DSV_DIMENSION
#define D3D_DSV_DIMENSION_UNKNOWN D3D11_DSV_DIMENSION_UNKNOWN
#define D3D_DSV_DIMENSION_TEXTURE1D D3D11_DSV_DIMENSION_TEXTURE1D
#define D3D_DSV_DIMENSION_TEXTURE1DARRAY D3D11_DSV_DIMENSION_TEXTURE1DARRAY
#define D3D_DSV_DIMENSION_TEXTURE2D D3D11_DSV_DIMENSION_TEXTURE2D
#define D3D_DSV_DIMENSION_TEXTURE2DARRAY D3D11_DSV_DIMENSION_TEXTURE2DARRAY
#define D3D_DSV_DIMENSION_TEXTURE2DMS D3D11_DSV_DIMENSION_TEXTURE2DMS
#define D3D_DSV_DIMENSION_TEXTURE2DMSARRAY D3D11_DSV_DIMENSION_TEXTURE2DMSARRAY

// D3D11_FILL_MODE
#define D3D_FILL_WIREFRAME D3D11_FILL_WIREFRAME
#define D3D_FILL_SOLID D3D11_FILL_SOLID

// D3D11_FILTER
#define D3D_FILTER_MIN_MAG_MIP_POINT D3D11_FILTER_MIN_MAG_MIP_POINT
#define D3D_FILTER_MIN_MAG_POINT_MIP_LINEAR D3D11_FILTER_MIN_MAG_POINT_MIP_LINEAR
#define D3D_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT D3D11_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT
#define D3D_FILTER_MIN_POINT_MAG_MIP_LINEAR D3D11_FILTER_MIN_POINT_MAG_MIP_LINEAR
#define D3D_FILTER_MIN_LINEAR_MAG_MIP_POINT D3D11_FILTER_MIN_LINEAR_MAG_MIP_POINT
#define D3D_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR D3D11_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR
#define D3D_FILTER_MIN_MAG_LINEAR_MIP_POINT D3D11_FILTER_MIN_MAG_LINEAR_MIP_POINT
#define D3D_FILTER_MIN_MAG_MIP_LINEAR D3D11_FILTER_MIN_MAG_MIP_LINEAR
#define D3D_FILTER_ANISOTROPIC D3D11_FILTER_ANISOTROPIC
#define D3D_FILTER_COMPARISON_MIN_MAG_MIP_POINT D3D11_FILTER_COMPARISON_MIN_MAG_MIP_POINT
#define D3D_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR D3D11_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR
#define D3D_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT D3D11_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT
#define D3D_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR D3D11_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR
#define D3D_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT
#define D3D_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR
#define D3D_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT D3D11_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT
#define D3D_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR D3D11_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR
#define D3D_FILTER_COMPARISON_ANISOTROPIC D3D11_FILTER_COMPARISON_ANISOTROPIC
#define D3D_FILTER_TEXT_1_BIT D3D11_FILTER_TEXT_1BIT


// D3D11_INPUT_CLASSIFICATION
#define D3D_INPUT_PER_VERTEX_DATA D3D11_INPUT_PER_VERTEX_DATA
#define D3D_INPUT_PER_INSTANCE_DATA D3D11_INPUT_PER_INSTANCE_DATA

// D3D11_MAP
#define D3D_MAP_READ D3D11_MAP_READ
#define D3D_MAP_WRITE D3D11_MAP_WRITE
#define D3D_MAP_READ_WRITE D3D11_MAP_READ_WRITE
#define D3D_MAP_WRITE_DISCARD D3D11_MAP_WRITE_DISCARD
#define D3D_MAP_WRITE_NO_OVERWRITE D3D11_MAP_WRITE_NO_OVERWRITE

// D3D11_PRIMITIVE_TOPOLOGY
#define D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST

// D3D11_SRV_DIMENSION
#define D3D_SRV_DIMENSION_UNKNOWN D3D11_SRV_DIMENSION_UNKNOWN
#define D3D_SRV_DIMENSION_BUFFER D3D11_SRV_DIMENSION_BUFFER
#define D3D_SRV_DIMENSION_TEXTURE1D D3D11_SRV_DIMENSION_TEXTURE1D
#define D3D_SRV_DIMENSION_TEXTURE1DARRAY D3D11_SRV_DIMENSION_TEXTURE1DARRAY
#define D3D_SRV_DIMENSION_TEXTURE2D D3D11_SRV_DIMENSION_TEXTURE2D
#define D3D_SRV_DIMENSION_TEXTURE2DARRAY D3D11_SRV_DIMENSION_TEXTURE2DARRAY
#define D3D_SRV_DIMENSION_TEXTURE2DMS D3D11_SRV_DIMENSION_TEXTURE2DMS
#define D3D_SRV_DIMENSION_TEXTURE2DMSARRAY D3D11_SRV_DIMENSION_TEXTURE2DMSARRAY
#define D3D_SRV_DIMENSION_TEXTURE3D D3D11_SRV_DIMENSION_TEXTURE3D
#define D3D_SRV_DIMENSION_TEXTURECUBE D3D11_SRV_DIMENSION_TEXTURECUBE
#define D3D_SRV_DIMENSION_TEXTURECUBEARRAY D3D11_SRV_DIMENSION_TEXTURECUBEARRAY
#define D3D_SRV_DIMENSION_BUFFEREX D3D11_SRV_DIMENSION_BUFFEREX

// D3D11_TEXTURE_ADDRESS_MODE
#define D3D_TEXTURE_ADDRESS_WRAP D3D11_TEXTURE_ADDRESS_WRAP
#define D3D_TEXTURE_ADDRESS_MIRROR D3D11_TEXTURE_ADDRESS_MIRROR
#define D3D_TEXTURE_ADDRESS_CLAMP D3D11_TEXTURE_ADDRESS_CLAMP
#define D3D_TEXTURE_ADDRESS_BORDER D3D11_TEXTURE_ADDRESS_BORDER
#define D3D_TEXTURE_ADDRESS_MIRROR_ONCE D3D11_TEXTURE_ADDRESS_MIRROR_ONCE

// D3D11_USAGE
#define D3D_USAGE_DEFAULT D3D11_USAGE_DEFAULT
#define D3D_USAGE_IMMUTABLE D3D11_USAGE_IMMUTABLE
#define D3D_USAGE_DYNAMIC D3D11_USAGE_DYNAMIC
#define D3D_USAGE_STAGING D3D11_USAGE_STAGING

#define CREATE_VERTEX_SHADER_ARGS(pShaderByteCode, byteCodeLength, pClassLinkage, ppVertexShader) pShaderByteCode, byteCodeLength, pClassLinkage, ppVertexShader
#define CREATE_PIXEL_SHADER_ARGS(pShaderByteCode, byteCodeLength, pClassLinkage, ppPixelShader) pShaderByteCode, byteCodeLength, pClassLinkage, ppPixelShader
#define CREATE_GEOMETRY_SHADER_ARGS(pShaderByteCode, byteCodeLength, pClassLinkage, ppPixelShader) pShaderByteCode, byteCodeLength, pClassLinkage, ppPixelShader

#define VS_SET_SHADER_ARGS(pVertexShader, ppClassInstances, numClassInstances) pVertexShader, ppClassInstances, numClassInstances
#define PS_SET_SHADER_ARGS(pPixelShader, ppClassInstances, numClassInstances) pPixelShader, ppClassInstances, numClassInstances
#define GS_SET_SHADER_ARGS(pGeometryShader, ppClassInstances, numClassInstances) pGeometryShader, ppClassInstances, numClassInstances

#define CREATE_D3D_BUFFER_DESC(byteWidth, usage, bindFlags, cpuAccessFlags, miscFlags, structureByteStride) { byteWidth, usage, bindFlags, cpuAccessFlags, miscFlags, structureByteStride }

#define D3DXCompileFromMemory D3DX11CompileFromMemory
#define D3DXCreateTextureFromFile D3DX11CreateTextureFromFile
#define D3D_CREATE_DEVICE_DEBUG D3D11_CREATE_DEVICE_DEBUG

#define D3DCalcSubresource D3D11CalcSubresource

#endif

inline HRESULT LoadShader(char* file, char* profile, ID3D10Blob** shaderBlob)
{
	FILE* pFile = fopen(file, "rb");

	fseek(pFile, 0, SEEK_END);
	int size = ftell(pFile);
	fseek(pFile, 0, SEEK_SET);

	char* srcData = new char[size];
	fread(srcData, size, 1, pFile);
	fclose(pFile);

	//D3D10_SHADER_DEBUG | D3D10_SHADER_SKIP_OPTIMIZATION

	ID3D10Blob* errorsBlob;
	HRESULT hr = D3DXCompileFromMemory(srcData, size, NULL, NULL, NULL, "main", profile, D3D10_SHADER_DEBUG | D3D10_SHADER_SKIP_OPTIMIZATION, 0, NULL, shaderBlob, &errorsBlob, NULL);

	if(errorsBlob)
	{
		void* ptr = errorsBlob->GetBufferPointer();
		int size = errorsBlob->GetBufferSize();
		int z = 0;
	}

	delete[] srcData;
	return hr;
}
